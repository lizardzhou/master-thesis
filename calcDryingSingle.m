function [dStream, tau, dFluent, dUDF, moi, fracWFluent, fracWUDF, f, temp, dryingTime1, dryingTime2, dryingTime3] = calcDryingSingle(traj, idxTraj, numStream, plotAll)
% by Xiye Zhou, Oct. 2021
% Evaluating a single complete particle trajectory retrieved from cell traj
% Input:
%   traj: cell containing info of all trajectories, generated by loadAllTrajectories.m. Call this function only after loadAllTrajectories.m is called.
%   traj contains the following info:
%       (:,1) x
%       (:,2) y
%       (:,3) z
%       (:,4) residence time
%       (:,5) particle diameter calculated by Fluent
%       (:,6) particle diameter calculated by UDF drying kinetics
%       (:,7) moisture content
%       (:,8) water fraction calculated by Fluent
%       (:,9) relative drying rate
%       (:,10) single particle mass
%       (:,11) particle temperature
%       ... (not relavant for calculation of single particle stream)
%       (:,18) time step
%   idxTraj: index of the trajectory in cell "traj"
%   numStream: # of streams per diameter
%   plotAll: if user sets the value as 1, parameters will be plotted; in case of other
%   values, no plot will be made
% Returns:
%   dStream: initial diameter of the trajectory
%   residence time (tau)
%   diameter from Fluent (dFluent)
%   diameter from UDF (dUDF)
%   moisture content (moi)
%   water fraction from Fluent (fracWFluent)
%   water fraction from UDF (fracWUDF)
%   relative drying rate (f)
%   particle temperature in K (temp)
%   time for 1st drying stage
%   time for 2nd drying stage i.e. f reduces from 1 to 0
%   time for 3rd drying stage i.e. f = o till leave the chamber
%% Check input
maxNumIter = 1.5e5; % maximal number of data points per trajectory
if idxTraj < 1 || idxTraj > size(traj,1)
    error('There are totally %g trajectories. Please enter a number between 1 and %g. \n', size(traj,1), size(traj,1));
else
    if size(traj{idxTraj,1},1) > maxNumIter
        error('This function only works for complete trajectories. Please look into the cell "traj" and find a trajectory with less than %g data points.', maxNumIter);
    end
end
%% Retrieve data
% list diameters at injection
dClass = zeros(size(traj,1)/numStream,1); % initialize array for diameters at injection
idxClass = 1;
for i = 1:numStream:size(traj,1)-1
    dClass(idxClass,1) = traj{i,1}(1,5);
    idxClass = idxClass + 1;
end
dStream = dClass(ceil(idxTraj / numStream),1); % injection diameter of the input trajectory
singleData = traj{idxTraj,1}; % data of the chosen trajectory
tau = singleData(:,4); % residence time
dFluent = singleData(:,5); % particle diameter calculated by Fluent
dUDF = singleData(:,6); % particle diameter calculated by UDF drying kinetics
moi = singleData(:,7); % moisture content
fracWUDF = moi ./ (1 + moi); % water fraction calculated from moisture content in UDF
fracWFluent = singleData(:,8); % water fraction calculated by Fluent
f = singleData(:,9); % relative drying rate
idx_f1 = find(f<1,1); % begin of 2nd drying stage: first f-value smaller than 1
idx_f0 = find(f<5e-5,1); % end of 2nd drying stage: first f-value smaller than 5e-5 (approach 0)
dryingTime1 = sum(singleData(1:idx_f1,18)); % duration of 1st drying stage
dryingTime2 = sum(singleData(idx_f1:idx_f0,18)); % duration of 2nd drying stage
dryingTime3 = sum(singleData(idx_f0:end,18)); % duration of 3nd drying stage
temp = singleData(:,11); % particle temperature
%% Plot diameter if the user wants to do so
if plotAll == 1
    % Plot diameter comparison
    figure
    plot(tau,dFluent,tau,dUDF,'LineWidth',1)
    if dStream < 1e-5
        set(gca,'Xscale','log');
    end
    xlabel('Residence time [s]','Interpreter','latex');
    ylabel('Particle diameter [m]','Interpreter','latex');
    legend('Fluent','UDF','Interpreter','latex','Location','best')
    grid on
    % Plot moisture content
    figure
    plot(tau,moi,'LineWidth',1)
    if dStream < 1e-5
        set(gca,'Xscale','log');
    end
    xlabel('Residence time [s]','Interpreter','latex');
    ylabel('Moisture content [-]','Interpreter','latex');
    grid on
    % Plot water fraction comparison
    figure
    plot(tau,fracWFluent,tau,fracWUDF,'LineWidth',1)
    if dStream < 1e-5
        set(gca,'Xscale','log')
    end   
    xlabel('Residence time [s]','Interpreter','latex');
    ylabel('Water fraction of particle [-]','Interpreter','latex');
    legend('Fluent','UDF','Interpreter','latex','Location','best')
    grid on
    % Plot relative drying rate
    figure
    plot(tau,f,'LineWidth',1)
    if dStream < 1e-5
        set(gca,'Xscale','log')
    end
    xlabel('Residence time [s]','Interpreter','latex');
    ylabel('Relative drying rate [-]','Interpreter','latex');
    grid on
    % Plot temperature
    figure
    plot(tau,temp-273,'LineWidth',1)
    if dStream < 1e-5
        set(gca,'Xscale','log')
    end
    xlabel('Residence time [s]','Interpreter','latex');
    ylabel('Particle temperature [$^\circ$C]','Interpreter','latex');
    grid on 
end
end
